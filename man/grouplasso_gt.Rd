% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouplasso.R
\name{grouplasso_gt}
\alias{grouplasso_gt}
\title{Compute group lasso for two populations with group testing data}
\usage{
grouplasso_gt(
  Y,
  Z,
  Se,
  Sp,
  E.approx,
  X,
  groups,
  lambda,
  w,
  tol = 0.001,
  maxiter = 1000,
  init = NULL,
  report.prog = FALSE
)
}
\arguments{
\item{Y}{Group testing output in the format as output by one of the functions \code{individual.assay.gen}, \code{masterpool.assay.gen}, \code{dorfman.assay.gen}, or \code{array.assay.gen}.}

\item{Z}{Group testing output in the format as output by one of the functions \code{individual.assay.gen}, \code{masterpool.assay.gen}, \code{dorfman.assay.gen}, or \code{array.assay.gen}.}

\item{Se}{A vector of testing sensitivities, where the first element is the
testing specificity for pools and the second entry is the
test specificity for individual testing, if applicable.}

\item{Sp}{A vector of testing specificities, where the first element is the
testing specificity for pools and the second entry is the
test specificity for individual testing, if applicable.}

\item{E.approx}{a logical indicating whether the conditional expectations in the E-step should be computed approximately or exactly.}

\item{X}{the matrix with the observed covariate values (including a column of ones for the intercept)}

\item{groups}{a vector indicating to which group each covariate belongs}

\item{lambda}{the level of sparsity penalization}

\item{w}{group-specific weights for different penalization of different groups}

\item{tol}{a convergence criterion}

\item{maxiter}{the maximum allowed number of iterations (EM steps)}

\item{init}{a list of initial values for the coefficient}

\item{report.prog}{a logical. If \code{TRUE} then the number of inner loops required to complete the M step of the EM algorithm are returned after each EM step.}
}
\value{
Returns the estimator of the semiparametric additive model with group testing data
}
\description{
Compute group lasso for two populations with group testing data
}
\examples{
data <- get_grouplasso_data(n = 1000, response = "gt")

grouplasso_gt.out <- grouplasso_gt(Y = data$Y$I,
                                   Z = data$Y$A,
                                   Se = data$Y$Se,
                                   Sp = data$Y$Sp,
                                   E.approx = data$Y$E.approx,
                                   X = data$X,
                                   groups = data$groups,
                                   lambda = 1,
                                   w  = data$w,
                                   tol = 1e-3,
                                   maxiter = 500,
                                   report.prog = TRUE)
}
