% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc.R
\name{plot_semipadd2pop}
\alias{plot_semipadd2pop}
\title{#' Plot method for class semipaddgt
#' @export
plot_semipaddgt <- function(x,true.functions=NULL)
{
  
  f.hat <- x$f.hat
  f.hat.design <- x$f.hat.design
  knots.list <- x$knots.list
  pp <- length(f.hat)
  n.plots <- length(which(x$nonparm == 1))
  
  ncols <- 4
  nrows <- ceiling(n.plots/ncols)
  
  par(mfrow=c(nrows,ncols),mar=c(2.1,2.1,1.1,1.1))
  
  for( j in which(x$nonparm == 1) ){
    
    xj.min <- min(knots.list[[j]]) + 1e-2
    xj.max <- max(knots.list[[j]]) - 1e-2
    
      plot(NA,ylim = range(f.hat.design[,-1]),xlim=c(xj.min,xj.max))
      if(x$nonparm[j]==1) abline(v=knots.list[[j]],col=rgb(0,0,0,0.15))
      
      plot(f.hat[[j]],xj.min,xj.max,add=TRUE,col=rgb(0,0,0,1))
      
      if(length(true.functions)!=0)
      {
        
        x.seq <- seq(xj.min,xj.max,length=300)
        f.cent.seq <- true.functions$f[[j]](x.seq) - mean(true.functions$f[[j]](true.functions$X[,j]))
        lines(f.cent.seq ~ x.seq,lty=2)
        
      }
      
  }
  
}}
\usage{
plot_semipadd2pop(x, true.functions = NULL)
}
\description{
#' Plot method for class semipaddgt
#' @export
plot_semipaddgt <- function(x,true.functions=NULL)
{
  
  f.hat <- x$f.hat
  f.hat.design <- x$f.hat.design
  knots.list <- x$knots.list
  pp <- length(f.hat)
  n.plots <- length(which(x$nonparm == 1))
  
  ncols <- 4
  nrows <- ceiling(n.plots/ncols)
  
  par(mfrow=c(nrows,ncols),mar=c(2.1,2.1,1.1,1.1))
  
  for( j in which(x$nonparm == 1) ){
    
    xj.min <- min(knots.list[[j]]) + 1e-2
    xj.max <- max(knots.list[[j]]) - 1e-2
    
      plot(NA,ylim = range(f.hat.design[,-1]),xlim=c(xj.min,xj.max))
      if(x$nonparm[j]==1) abline(v=knots.list[[j]],col=rgb(0,0,0,0.15))
      
      plot(f.hat[[j]],xj.min,xj.max,add=TRUE,col=rgb(0,0,0,1))
      
      if(length(true.functions)!=0)
      {
        
        x.seq <- seq(xj.min,xj.max,length=300)
        f.cent.seq <- true.functions$f[[j]](x.seq) - mean(true.functions$f[[j]](true.functions$X[,j]))
        lines(f.cent.seq ~ x.seq,lty=2)
        
      }
      
  }
  
}
}
\details{
#' Plot method for class semipaddgt_grid
#' @export
plot_semipaddgt_grid <- function(x,true.functions=NULL)
{
  
  f.hat <- x$f.hat
  f.hat.design <- x$f.hat.design
  knots.list <- x$knots.list
  n.lambda <- length(x$lambda.seq)
  pp <- length(f.hat)
  
  n.plots <- length(unique(which(x$nonparm == 1)))
  
  ncols <- 4
  nrows <- ceiling(n.plots/ncols)
  
  par(mfrow=c(nrows,ncols),mar=c(2.1,2.1,1.1,1.1))
  
  for( j in which(x$nonparm == 1) ){
    
    xj.min <- min(knots.list[[j]]) + 1e-2
    xj.max <- max(knots.list[[j]]) - 1e-2
    
    plot(NA,ylim = range(f.hat.design[,-1,]),xlim=c(xj.min,xj.max))
    if(x$nonparm[j]==1) abline(v=knots.list[[j]],col=rgb(0,0,0,0.15))
    
    for(l in 1:n.lambda){

      plot(f.hat[[l]][[j]],xj.min,xj.max,add=TRUE,col=rgb(0,0,0,.5))
      
    }
    
    if(length(true.functions)!=0){
      
      x.seq <- seq(xj.min,xj.max,length=300)
      f.cent.seq <- true.functions$f[[j]](x.seq) - mean(true.functions$f[[j]](true.functions$X[,j]))
      lines(f.cent.seq ~ x.seq,lty=2)
      
    }
  }
  
}


#' Plot method for class semipaddgt_cv
#' @export
plot_semipaddgt_cv <- function(x,true.functions=NULL)
{
  
  f.hat <- x$f.hat
  f.hat.folds <- x$f.hat.folds
  f.hat.design <- x$f.hat.design
  knots.list <- x$knots.list
  n.lambda <- x$n.lambda
  which.lambda.cv <- x$which.lambda.cv
  
  pp <- length(f.hat)
  n.plots <- length(unique(which(x$nonparm == 1)))
  
  ncols <- 4
  nrows <- ceiling(n.plots/ncols)
  
  par(mfrow=c(nrows,ncols),mar=c(2.1,2.1,1.1,1.1))
  
  for( j in which(x$nonparm == 1) ){
    
    xj.min <- min(knots.list[[j]]) + 1e-2
    xj.max <- max(knots.list[[j]]) - 1e-2
    
    plot(NA,ylim = range(f.hat.design[,-1,]),xlim=c(xj.min,xj.max))
    if(x$nonparm[j]==1) abline(v=knots.list[[j]],col=rgb(0,0,0,0.15))
    
    for(l in 1:n.lambda){
      
      opacity <- ifelse( l == which.lambda.cv,1,0.25)
      plot(f.hat[[l]][[j]],xj.min,xj.max,add=TRUE,col=rgb(0,0,0,opacity))
      
    }
    
    if(length(true.functions)!=0){
      
      x.seq <- seq(xj.min,xj.max,length=300)
      f.cent.seq <- true.functions$f[[j]](x.seq) - mean(true.functions$f[[j]](true.functions$X[,j]))
      lines(f.cent.seq ~ x.seq,lty=2)
      
    }
    
  }
  
}
Plot method for class semipadd2pop_gt
}
