% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouplasso.R
\name{grouplasso_gt_cv_fixedgrid}
\alias{grouplasso_gt_cv_fixedgrid}
\title{Choose tuning parameters by crossvalidation for grouplasso logreg when given a fixed grid of lambda values}
\usage{
grouplasso_gt_cv_fixedgrid(
  Y,
  Z,
  Se,
  Sp,
  X,
  groups,
  lambda.seq,
  n.folds,
  b.init.mat,
  w,
  tol = 0.001,
  maxiter = 500
)
}
\arguments{
\item{Y}{Group testing output in the format as output by one of the functions \code{individual.assay.gen}, \code{dorfman.assay.gen}, or \code{array.assay.gen}.}

\item{Z}{Group testing output in the format as output by one of the functions \code{individual.assay.gen}, \code{dorfman.assay.gen}, or \code{array.assay.gen}.}

\item{Se}{A vector of testing sensitivities, where the first element is the
testing specificity for pools and the second entry is the
test specificity for individual testing, if applicable.}

\item{Sp}{A vector of testing specificities, where the first element is the
testing specificity for pools and the second entry is the
test specificity for individual testing, if applicable.}

\item{X}{matrix containing the design matrices}

\item{groups}{a vector indicating to which group each covariate belongs}

\item{lambda.seq}{sequence of lambda values}

\item{n.folds}{the number of crossvalidation folds}

\item{b.init.mat}{matrix of which the columns contain initial values for beta for the values of the tuning parameter in \code{lambda.seq}}

\item{w}{group-specific weights for different penalization of different groups}

\item{tol}{the convergence tolerance}

\item{maxiter}{the maximum number of iterations allowed for each fit}
}
\value{
a list containing the fits over a grid of lambda values as well as the vector of lambda values
}
\description{
Choose tuning parameters by crossvalidation for grouplasso logreg when given a fixed grid of lambda values
}
\examples{
grouplasso_gt_data <- get_grouplasso_gt_data(n = 400)

grouplasso_gt_grid.out <- grouplasso_gt_grid(Y = grouplasso_gt_data$Y,
                                             Z = grouplasso_gt_data$Z,
                                             Se = grouplasso_gt_data$Se,
                                             Sp = grouplasso_gt_data$Sp,
                                             X = grouplasso_gt_data$X,
                                             groups = grouplasso_gt_data$groups,
                                             n.lambda = 25,
                                             lambda.min.ratio = 0.01,
                                             w = grouplasso_gt_data$w,
                                             tol = 1e-3,
                                             maxiter = 500,
                                             report.prog = FALSE)


lambda.seq <- grouplasso_gt_grid.out$lambda.seq
b.mat <- grouplasso_gt_grid.out$b.mat

grouplasso_gt_cv_fixedgrid.out <- grouplasso_gt_cv_fixedgrid(Y = grouplasso_gt_data$Y,
                                                             Z = grouplasso_gt_data$Z,
                                                             Se = grouplasso_gt_data$Se,
                                                             Sp = grouplasso_gt_data$Sp,
                                                             X = grouplasso_gt_data$X,
                                                             groups = grouplasso_gt_data$groups,
                                                             lambda.seq = lambda.seq,
                                                             n.folds = 5,
                                                             b.init.mat = b.mat,
                                                             w = grouplasso_gt_data$w,
                                                             tol = 1e-3,
                                                             maxiter = 500)
}
