% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd.R
\name{semipadd}
\alias{semipadd}
\title{Fit semiparametric regression model}
\usage{
semipadd(
  Y,
  X,
  nonparm,
  response,
  w,
  int = NULL,
  w_int = NULL,
  d,
  xi,
  lambda.beta,
  lambda.f,
  tol = 1e-04,
  max.iter = 500
)
}
\arguments{
\item{Y}{the response data}

\item{X}{the matrix with the observed covariate values (including a column of ones for the intercept)}

\item{nonparm}{a vector indicating for which covariates a nonparametric function is to be estimated}

\item{response}{a character string indicating the type of response.  Can be \code{"continuous"}, \code{"binary"}, or \code{"gt"}}

\item{w}{covariate-specific weights for different penalization toward similarity for different covariates}

\item{int}{a matrix with rows giving the pairs of covariates for which to include interaction terms}

\item{w_int}{the penalization weights on the interaction terms}

\item{d}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{xi}{a tuning parameter governing the smoothness of the nonparametric estimates}

\item{lambda.beta}{the level of sparsity penalization for the parametric effects}

\item{lambda.f}{the level of sparsity penalization for the nonparametric effects}

\item{tol}{a convergence criterion}

\item{max.iter}{the maximum allowed number of iterations}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the estimator of the semiparametric additive model
}
\description{
Fit semiparametric regression model
}
\examples{
data <- get_semipadd_data(n = 500, response = "continuous")

semipadd.out <- semipadd(Y = data$Y,
                         X = data$X,
                         nonparm = data$nonparm,
                         response = "continuous",
                         w = 1,
                         int = data$int,
                         w_int = data$w_int,
                         d = 20,
                         xi = 1,
                         lambda.beta = 1,
                         lambda.f = 1,
                         tol = 1e-3,
                         max.iter = 500)

plot_semipadd(semipadd.out)
}
