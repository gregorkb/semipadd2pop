% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd.R
\name{semipadd_grid}
\alias{semipadd_grid}
\title{Compute semiparametric regression model while penalizing over a grid of tuning parameter values}
\usage{
semipadd_grid(
  Y,
  X,
  nonparm,
  response,
  w = 1,
  int = NULL,
  w_int = NULL,
  d,
  xi,
  n.lambda = 5,
  lambda.min.ratio = 0.01,
  lambda.max.ratio = 1,
  lambda.beta = 1,
  lambda.f = 1,
  tol = 0.001,
  maxiter = 1000,
  report.prog = FALSE
)
}
\arguments{
\item{Y}{the response data}

\item{X}{the matrix with the observed covariate values (including a column of ones for the intercept)}

\item{nonparm}{a vector indicating for which covariates a nonparametric function is to be estimated}

\item{response}{a character string indicating the type of response.  Can be \code{"continuous"}, \code{"binary"}, or \code{"gt"}}

\item{w}{covariate-specific weights for different penalization for different covariates}

\item{int}{a matrix with rows giving the pairs of covariates for which to include interaction terms}

\item{w_int}{the penalization weights on the interaction terms}

\item{d}{vector giving the dimensions the B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{xi}{a tuning parameter governing the smoothness of the nonparametric estimates}

\item{n.lambda}{the number of lambda values with which to make the grid}

\item{lambda.min.ratio}{ratio of the smallest lambda value to the smallest value of lambda which admits no variables to the model}

\item{lambda.beta}{the level of sparsity penalization for the parametric effects (relative to nonparametric effects)}

\item{lambda.f}{the level of sparsity penalization for the nonparametric effects (relative to the parametric effects)}

\item{tol}{a convergence criterion}

\item{maxiter}{the maximum allowed number of iterations}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the estimator of the semiparametric additive model
}
\description{
Compute semiparametric regression model while penalizing over a grid of tuning parameter values
}
\examples{
data <- get_semipadd_data(n = 500, response = "binary")

semipadd_grid.out <- semipadd_grid(Y = data$Y,
                                   X = data$X,
                                   nonparm = data$nonparm,
                                   response = "binary",
                                   w = 1,
                                   int = data$int,
                                   w_int = data$w_int,
                                   d = 20,
                                   xi = 1,
                                   n.lambda = 5,
                                   lambda.min.ratio = .001,
                                   lambda.max.ratio = .1,
                                   lambda.beta = 1,
                                   lambda.f = 1,
                                   tol = 1e-3,
                                   maxiter = 500,
                                   report.prog = TRUE)

plot_semipadd_grid(semipadd_grid.out)
}
