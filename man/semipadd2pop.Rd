% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd2pop.R
\name{semipadd2pop}
\alias{semipadd2pop}
\title{Compute semiparametric binary-response regression model with 2 data sets while penalizing dissimilarity}
\usage{
semipadd2pop(
  Y1,
  X1,
  nonparm1,
  Y2,
  X2,
  nonparm2,
  response,
  rho1,
  rho2,
  w1,
  w2,
  w,
  nCom,
  d1,
  d2,
  xi,
  lambda.beta,
  lambda.f,
  eta.beta,
  eta.f,
  tol = 1e-04,
  maxiter = 500,
  plot_obj = FALSE
)
}
\arguments{
\item{Y1}{the response data from data set 1}

\item{nonparm1}{a vector indicating for which covariates a nonparametric function is to be estimated for data set 1}

\item{Y2}{the response data from data set 2}

\item{nonparm2}{a vector indicating for which covariates a nonparametric function is to be estimated for data set 2}

\item{response}{a character string indicating the type of response.  Can be \code{"continuous"}, \code{"binary"}, or \code{"gt"}}

\item{rho1}{weight placed on the first data set}

\item{rho2}{weight placed on the second data set}

\item{w1}{covariate-specific weights for different penalization among covariates in data set 1}

\item{w2}{covariate-specific weights for different penalization among covariates in data set 2}

\item{w}{covariate-specific weights for different penalization toward similarity for different covariates}

\item{nCom}{the number of covariates to be treated as common between the two data sets: these must be arranged in the first \code{nCom} columns of the matrices \code{X1} and \code{X2} after the column of ones corresponding to the intercept.}

\item{d1}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{d2}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{xi}{a tuning parameter governing the smoothness of the nonparametric estimates}

\item{lambda.beta}{the level of sparsity penalization for the parametric effects}

\item{lambda.f}{the level of sparsity penalization for the nonparametric effects}

\item{eta.beta}{the level of penalization towards model similarity for parametric effects indicated to be common}

\item{eta.f}{the level of penalization towards model similarity for nonparametric effects indicated to be common}

\item{tol}{a convergence criterion}

\item{maxiter}{the maximum allowed number of iterations}

\item{XX1}{the matrix with the observed covariate values for data set 1 (including a column of ones for the intercept)}

\item{XX2}{the matrix with the observed covariate values for data set 2 (including a column of ones for the intercept)}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the estimator of the semiparametric additive model
}
\description{
Compute semiparametric binary-response regression model with 2 data sets while penalizing dissimilarity
}
\examples{
data <- get_semipadd2pop_data(n1 = 500, n2 = 600, response = "binary")

semipadd2pop.out <- semipadd2pop(Y1 = data$Y1,
                                 X1 = data$X1,
                                 nonparm1 = data$nonparm1,
                                 Y2 = data$Y2,
                                 X2 = data$X2,
                                 nonparm2 = data$nonparm2,
                                 response = "binary",
                                 rho1 = 1,
                                 rho2 = 1,
                                 nCom = data$nCom,
                                 d1 = 25,
                                 d2 = 15,
                                 xi = .5,
                                 w1 = 1,
                                 w2 = 1,
                                 w = 1,
                                 lambda.beta = .01,
                                 lambda.f = .01,
                                 eta.beta = .1,
                                 eta.f = .1,
                                 tol = 1e-3,
                                 maxiter = 500)


plot_semipadd2pop(semipadd2pop.out,
                  true.functions = list(f1 = data$f1,
                                        f2 = data$f2,
                                        X1 = data$X1,
                                        X2 = data$X2))
}
