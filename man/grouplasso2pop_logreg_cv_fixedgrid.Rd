% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipaddgt2pop_logreg.R
\name{grouplasso2pop_logreg_cv_fixedgrid}
\alias{grouplasso2pop_logreg_cv_fixedgrid}
\title{Choose tuning parameters by crossvalidation for grouplasso2pop logreg when given a fixed grid of lambda and eta values}
\usage{
grouplasso2pop_logreg_cv_fixedgrid(Y1, X1, groups1, Y2, X2, groups2, lambda.seq,
  eta.seq, n.folds, b1.init.arr, b2.init.arr, w1, w2, w, AA1, AA2, Com,
  tol = 0.001, max.iter = 500)
}
\arguments{
\item{Y1}{the binary response vector of data set 1}

\item{X1}{matrix containing the design matrices for data set 1}

\item{groups1}{a vector indicating to which group each covariate of data set 1 belongs}

\item{Y2}{the binary response vector of data set 2}

\item{X2}{matrix containing the design matrices for data set 2}

\item{groups2}{a vector indicating to which group each covariate of data set 2 belongs}

\item{lambda.seq}{sequence of lambda values}

\item{eta.seq}{sequence of eta values}

\item{n.folds}{the number of crossvalidation folds}

\item{b1.init.arr}{array of initial values for beta1}

\item{b2.init.arr}{array of initial values for beta2}

\item{w1}{group-specific weights for different penalization across groups in data set 1}

\item{w2}{group-specific weights for different penalization across groups in data set 2}

\item{w}{group-specific weights for different penalization toward similarity for different groups}

\item{AA1}{a list of the matrices A1j}

\item{Com}{the indices of the covariate groups which are common in the two datasets}

\item{tol}{the convergence tolerance}

\item{max.iter}{the maximum number of iterations allowed for each fit}

\item{n.folds}{the number of crossvalidation folds}

\item{AA1}{a list of the matrices A2j}
}
\value{
a list containing the fits over a grid of lambda and eta values as well as the vector of lambda values and the vector of eta values
}
\description{
Choose tuning parameters by crossvalidation for grouplasso2pop logreg when given a fixed grid of lambda and eta values
}
\examples{
grouplasso2pop_logreg_data <- get_grouplasso2pop_logreg_data(n1 = 400,n2 = 600)

grouplasso2pop_logreg_grid.out <- grouplasso2pop_logreg_grid(Y1 = grouplasso2pop_logreg_data$Y1,
                                                             X1 = grouplasso2pop_logreg_data$X1,
                                                             groups1 = grouplasso2pop_logreg_data$groups1,
                                                             Y2 = grouplasso2pop_logreg_data$Y2,
                                                             X2 = grouplasso2pop_logreg_data$X2,
                                                             groups2 = grouplasso2pop_logreg_data$groups2,
                                                             n.lambda = 5,
                                                             n.eta = 5,
                                                             lambda.min.ratio = 0.01,
                                                             w1 = grouplasso2pop_logreg_data$w1,
                                                             w2 = grouplasso2pop_logreg_data$w2,
                                                             w = grouplasso2pop_logreg_data$w,
                                                             AA1 = grouplasso2pop_logreg_data$AA1,
                                                             AA2 = grouplasso2pop_logreg_data$AA2,
                                                             Com = grouplasso2pop_logreg_data$Com,
                                                             tol = 1e-3,
                                                             max.iter = 500,
                                                             report.prog = TRUE)

lambda.seq <- grouplasso2pop_logreg_grid.out$lambda.seq
eta.seq <- grouplasso2pop_logreg_grid.out$eta.seq
b1.arr <- grouplasso2pop_logreg_grid.out$b1.arr
b2.arr <- grouplasso2pop_logreg_grid.out$b2.arr

grouplasso2pop_logreg_cv_fixedgrid.out <- grouplasso2pop_logreg_cv_fixedgrid(Y1 = grouplasso2pop_logreg_data$Y1,
                                                                             X1 = grouplasso2pop_logreg_data$X1,
                                                                             groups1 = grouplasso2pop_logreg_data$groups1,
                                                                             Y2 = grouplasso2pop_logreg_data$Y2,
                                                                             X2 = grouplasso2pop_logreg_data$X2,
                                                                             groups2 = grouplasso2pop_logreg_data$groups2,
                                                                             lambda.seq = lambda.seq,
                                                                             eta.seq = eta.seq,
                                                                             n.folds = 5,
                                                                             b1.init.arr = b1.arr,
                                                                             b2.init.arr = b2.arr,
                                                                             w1 = grouplasso2pop_logreg_data$w1,
                                                                             w2 = grouplasso2pop_logreg_data$w2,
                                                                             w = grouplasso2pop_logreg_data$w,
                                                                             AA1 = grouplasso2pop_logreg_data$AA1,
                                                                             AA2 = grouplasso2pop_logreg_data$AA2,
                                                                             Com = grouplasso2pop_logreg_data$Com,
                                                                             tol = 1e-3,
                                                                             max.iter = 500)
}
