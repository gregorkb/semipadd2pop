% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd2pop_wint.R
\name{semipadd2pop_cv_adapt_wint}
\alias{semipadd2pop_cv_adapt_wint}
\title{Compute semiparametric binary-response regression model with 2 data sets while penalizing dissimilarity over a grid of tuning parameter values after an adaptive step}
\usage{
semipadd2pop_cv_adapt_wint(
  Y1,
  X1,
  nonparm1,
  Y2,
  X2,
  nonparm2,
  response,
  rho1,
  rho2,
  w1,
  w2,
  w,
  nCom,
  int1 = NULL,
  int2 = NULL,
  w1_int = 1,
  w2_int = 1,
  w_int = 1,
  d1,
  d2,
  xi,
  n.lambda = 5,
  n.eta = 5,
  lambda.min.ratio = 0.01,
  lambda.max.ratio = 1,
  eta.min.ratio = 0.001,
  eta.max.ratio = 10,
  n.folds = 5,
  lambda.beta = 1,
  lambda.f = 1,
  eta.beta = 1,
  eta.f = 1,
  tol = 0.001,
  maxiter = 1000,
  report.prog = FALSE
)
}
\arguments{
\item{Y1}{the binary response vector of data set 1}

\item{X1}{the matrix with the observed covariate values for data set 1 (including a column of ones for the intercept)}

\item{nonparm1}{a vector indicating for which covariates a nonparametric function is to be estimated for data set 1}

\item{Y2}{the binary response vector of data set 2}

\item{X2}{the matrix with the observed covariate values for data set 2 (including a column of ones for the intercept)}

\item{nonparm2}{a vector indicating for which covariates a nonparametric function is to be estimated for data set 2}

\item{response}{a character string indicating the type of response.  Can be \code{"continuous"}, \code{"binary"}, or \code{"gt"}}

\item{rho1}{weight placed on the first data set}

\item{rho2}{weight placed on the second data set}

\item{w1}{covariate-specific weights for different penalization among covariates in data set 1}

\item{w2}{covariate-specific weights for different penalization among covariates in data set 2}

\item{w}{covariate-specific weights for different penalization toward similarity for different covariates}

\item{nCom}{the number of covariates to be treated as common between the two data sets: these must be arranged in the first \code{nCom} columns of the matrices \code{X1} and \code{X2} after the column of ones corresponding to the intercept.}

\item{int1}{a matrix with two columns in which each row contains a pair of covariates for which to include an interaction term for data set 1}

\item{int2}{a matrix with two columns in which each row contains a pair of covariates for which to include an interaction term for data set 1}

\item{w1_int}{interaction-specific weights for different penalization among interactions in data set 1}

\item{w2_int}{interaction-specific weights for different penalization among interactions in data set 2}

\item{w_int}{interaction-specific weights for different penalization toward similarity for common interaction effects}

\item{d1}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{d2}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{xi}{a tuning parameter governing the smoothness of the nonparametric estimates}

\item{n.lambda}{the number of lambda values with which to make the grid}

\item{n.eta}{the number of eta values with which to make the grid}

\item{lambda.min.ratio}{ratio of the smallest lambda value to the smallest value of lambda which admits no variables to the model}

\item{lambda.max.ratio}{ratio of the largest lambda value to the smallest value of lambda which admits no variables to the model}

\item{n.folds}{the number of crossvalidation folds}

\item{lambda.beta}{the level of sparsity penalization for the parametric effects (relative to nonparametric effects)}

\item{lambda.f}{the level of sparsity penalization for the nonparametric effects (relative to the parametric effects)}

\item{eta.beta}{the level of penalization towards model similarity for parametric effects indicated to be common (relative to nonparametric effects)}

\item{eta.f}{the level of penalization towards model similarity for nonparametric effects indicated to be common (relative to the parametric effects)}

\item{tol}{a convergence criterion}

\item{maxiter}{the maximum allowed number of iterations}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the estimator of the semiparametric additive model
}
\description{
Compute semiparametric binary-response regression model with 2 data sets while penalizing dissimilarity over a grid of tuning parameter values after an adaptive step
}
\examples{
data <- get_semipadd2pop_data(n1 = 1001,n2 = 904, response = "continuous", int = TRUE)

semipadd2pop_cv_adapt_wint.out <- semipadd2pop_cv_adapt_wint(Y1 = data$Y1,
                                                             X1 = data$X1,
                                                             nonparm1 = data$nonparm1,
                                                             Y2 = data$Y2,
                                                             X2 = data$X2,
                                                             nonparm2 = data$nonparm2,
                                                             response = "continuous",
                                                             rho1 = 1,
                                                             rho2 = 1,
                                                             nCom = data$nCom,
                                                             int1 = data$int1,
                                                             int2 = data$int2,
                                                             w1_int = 1,
                                                             w2_int = 1,
                                                             w_int = 1,
                                                             d1 = 15,
                                                             d2 = 12,
                                                             xi = .5,
                                                             w1 = 1,
                                                             w2 = 1,
                                                             w = 1,
                                                             lambda.beta = 1,
                                                             lambda.f = 1,
                                                             eta.beta = 1,
                                                             eta.f = 1,
                                                             n.lambda = 5,
                                                             n.eta = 5,
                                                             lambda.min.ratio = 0.001,
                                                             lambda.max.ratio = .5,
                                                             n.folds = 5,
                                                             tol = 1e-3,
                                                             maxiter = 500,
                                                             report.prog = TRUE)

plot_semipadd2pop_grid_wint(semipadd2pop_cv_adapt_wint.out)
}
