% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipaddgt2pop_1pop.R
\name{grouplasso1pop_logreg}
\alias{grouplasso1pop_logreg}
\title{Minimize the objective function of the 1-population group lasso problem with a binary response}
\usage{
grouplasso1pop_logreg(Y1, X1, groups1, lambda, w1, tol = 1e-04,
  max.iter = 500, return_obj = FALSE, init = NULL)
}
\arguments{
\item{Y1}{the binary response vector of data set 1}

\item{X1}{matrix containing the design matrices for data set 1}

\item{groups1}{a vector of integers indicating to which group each covariate in data set 1 belongs}

\item{lambda}{the level of sparsity penalization}

\item{w1}{group-specific weights for different penalization across groups in data set 1}

\item{tol}{a convergence criterion}

\item{max.iter}{the maximum allowed number of iterations}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the minimizer of the 1-population group lasso objective function for the two data sets.
}
\description{
Minimize the objective function of the 1-population group lasso problem with a binary response
}
\examples{
# # generate data
n1 <- 400
d1 <- c(1,1,3,4)
q1 <- length(d1)
X1 <- matrix(rnorm(n1*sum(d1)),n1,sum(d1))
groups1 <- numeric() ; for(j in 1:q1){ groups1 <- c(groups1,rep(j,d1[j])) }
beta1 <- rnorm(ncol(X1))
Y1 <- rbinom(n1,1,logit(X1 \%*\% beta1))

# set tuning parameters
lambda <- 10
w1 <- rexp(q1,2)

# fit grouplasso1pop_logreg estimator
grouplasso1pop_logreg.out <- grouplasso1pop_logreg(Y1,X1,groups1,lambda,w1,tol=1e-4,max.iter=500,return_obj=TRUE)

beta1.hat <- grouplasso1pop_logreg.out$beta1.hat
obj.val <- grouplasso1pop_logreg.out$obj.val

# look at results
beta1.hat
plot(obj.val)
any(diff(obj.val) > 0) == FALSE # does the objective function decrease after every iteration?  YESSS!!!!!!
}
