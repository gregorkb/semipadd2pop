% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd_misc.R
\name{FoygelDrton_R}
\alias{FoygelDrton_R}
\title{Minimize l2-penalized quadratic function}
\usage{
FoygelDrton_R(h, L, lambda, evals, evecs)
}
\arguments{
\item{h}{a vector}

\item{L}{a matrix with number of rows equal to the length of h}

\item{lambda}{a value greater than zero giving the strength of the penalty}

\item{evals}{the eigenvalues of \eqn{L^TL}}

\item{evecs}{the eigenvectors of \eqn{L^TL}}
}
\value{
Returns the unique minimizer of \deqn{(1/2) \|h - L \beta\|_2^2  + \lambda * \|\beta\|_2}

See Theorem 2 of Foygel, Rina, and Mathias Drton. "Exact block-wise optimization in group lasso and sparse group lasso for linear regression." arXiv preprint arXiv:1010.3320 (2010).
}
\description{
Minimize l2-penalized quadratic function
}
\examples{
# generate an h and L
h <- rnorm(100)
L <- matrix(rnorm(100*10),100,10)
lambda <- 1

# get eigendecomposition of t(L) \%*\% L
LtL <- t(L) \%*\% L
eigen.out <- eigen(LtL)
evals <- eigen.out$values
evecs <- t(eigen.out$vectors)

# find minimizer
FoygelDrton(h,L,lambda,evals,evecs)

# compare to using optim() to minimize the same function
obj <- function(beta,L,h,lambda){
 val <- (1/2) * sum(  (h - L \%*\% beta )^2 ) + lambda * sqrt( sum(beta^2))
 return(val)
}
optim(par=rep(0,d),obj,L = L, h = h, lambda = lambda)$par
}
