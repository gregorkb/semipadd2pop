% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd2pop_linreg.R
\name{semipadd2pop_linreg}
\alias{semipadd2pop_linreg}
\title{Compute semiparametric continuous-response regression model with 2 data sets while penalizing dissimilarity}
\usage{
semipadd2pop_linreg(
  Y1,
  X1,
  nonparm1,
  Y2,
  X2,
  nonparm2,
  w1 = 1,
  w2 = 1,
  w = 1,
  nCom,
  d1,
  d2,
  xi,
  lambda.beta,
  lambda.f,
  eta.beta,
  eta.f,
  tol = 1e-04,
  max.iter = 500,
  plot_obj = FALSE
)
}
\arguments{
\item{Y1}{the response vector of data set 1}

\item{X1}{the matrix with the observed covariate values for data set 1 (including a column of ones for the intercept)}

\item{nonparm1}{a vector indicating for which covariates a nonparametric function is to be estimated for data set 1}

\item{Y2}{the response vector of data set 2}

\item{X2}{the matrix with the observed covariate values for data set 2 (including a column of ones for the intercept)}

\item{nonparm2}{a vector indicating for which covariates a nonparametric function is to be estimated for data set 2}

\item{w1}{covariate-specific weights for different penalization among covariates in data set 1}

\item{w2}{covariate-specific weights for different penalization among covariates in data set 2}

\item{w}{covariate-specific weights for different penalization toward similarity for different covariates}

\item{nCom}{the number of covariates to be treated as common between the two data sets: these must be arranged in the first \code{nCom} columns of the matrices \code{X1} and \code{X2} after the column of ones corresponding to the intercept.}

\item{d1}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{d2}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{xi}{a tuning parameter governing the smoothness of the nonparametric estimates}

\item{lambda.beta}{the level of sparsity penalization for the parametric effects}

\item{lambda.f}{the level of sparsity penalization for the nonparametric effects}

\item{eta.beta}{the level of penalization towards model similarity for parametric effects indicated to be common}

\item{eta.f}{the level of penalization towards model similarity for nonparametric effects indicated to be common}

\item{tol}{a convergence criterion}

\item{max.iter}{the maximum allowed number of iterations}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the minimizers of the 2-population group lasso objective function for the two data sets.
}
\description{
Compute semiparametric continuous-response regression model with 2 data sets while penalizing dissimilarity
}
\examples{
semipadd2pop_linreg_data <- get_semipadd2pop_linreg_data(n1 = 501, n2 = 604)

semipadd2pop_linreg.out <- semipadd2pop_linreg(Y1 = semipadd2pop_linreg_data$Y1,
                                               X1 = semipadd2pop_linreg_data$X1,
                                               nonparm1 = semipadd2pop_linreg_data$nonparm1,
                                               Y2 = semipadd2pop_linreg_data$Y2,
                                               X2 = semipadd2pop_linreg_data$X2,
                                               nonparm2 = semipadd2pop_linreg_data$nonparm2,
                                               w1=1,
                                               w2=1,
                                               w=1,
                                               nCom = semipadd2pop_linreg_data$nCom,
                                               d1 = semipadd2pop_linreg_data$nonparm1*40,
                                               d2 = semipadd2pop_linreg_data$nonparm2*15,
                                               xi=.5,
                                               lambda.beta=1,
                                               lambda.f=1,
                                               eta.beta=1,
                                               eta.f=1,
                                               tol=1e-3,
                                               max.iter=500,
                                               plot_obj=FALSE)

plot_semipaddgt2pop(semipadd2pop_linreg.out,
                    true.functions=list(f1 = semipadd2pop_linreg_data$f1,
                                        f2 = semipadd2pop_linreg_data$f2,
                                        X1 = semipadd2pop_linreg_data$X1,
                                        X2 = semipadd2pop_linreg_data$X2)
)
}
