% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipaddgt2pop_logreg.R
\name{grouplasso2pop_logreg_cv_adapt_fixedgrid}
\alias{grouplasso2pop_logreg_cv_adapt_fixedgrid}
\title{Choose tuning parameters by crossvalidation for grouplasso2pop logreg with adaptive weights}
\usage{
grouplasso2pop_logreg_cv_adapt_fixedgrid(Y1, X1, groups1, Y2, X2, groups2,
  lambda.seq, eta.seq, lambda.initial.fit, n.folds, w1, w2, w, AA1, AA2, Com,
  tol = 0.001, max.iter = 500, report.prog = TRUE)
}
\arguments{
\item{Y1}{the binary response vector of data set 1}

\item{X1}{matrix containing the design matrices for data set 1}

\item{groups1}{a vector indicating to which group each covariate of data set 1 belongs}

\item{Y2}{the binary response vector of data set 2}

\item{X2}{matrix containing the design matrices for data set 2}

\item{groups2}{a vector indicating to which group each covariate of data set 2 belongs}

\item{lambda.seq}{the lambda sequence}

\item{eta.seq}{sequence of eta values}

\item{n.folds}{the number of crossvalidation folds}

\item{w1}{group-specific weights for different penalization across groups in data set 1}

\item{w2}{group-specific weights for different penalization across groups in data set 2}

\item{w}{group-specific weights for different penalization toward similarity for different groups}

\item{AA1}{a list of the matrices A1j}

\item{Com}{the indices of the covariate groups which are common in the two datasets}

\item{AA1}{a list of the matrices A2j}
}
\value{
a list containing the fits over a grid of lambda and eta values as well as the vector of lambda values and the vector of eta values
}
\description{
Choose tuning parameters by crossvalidation for grouplasso2pop logreg with adaptive weights
}
\examples{
grouplasso2pop_logreg_data <- get_grouplasso2pop_logreg_data(n1 = 400, n2 = 600)

grouplasso2pop_logreg_grid.out <- grouplasso2pop_logreg_grid(Y1 = grouplasso2pop_logreg_data$Y1,
                                                             X1 = grouplasso2pop_logreg_data$X1,
                                                             groups1 = grouplasso2pop_logreg_data$groups1,
                                                             Y2 = grouplasso2pop_logreg_data$Y2,
                                                             X2 = grouplasso2pop_logreg_data$X2,
                                                             groups2 = grouplasso2pop_logreg_data$groups2,
                                                             n.lambda = 5,
                                                             n.eta = 5,
                                                             lambda.min.ratio = 0.01,
                                                             w1 = grouplasso2pop_logreg_data$w1,
                                                             w2 = grouplasso2pop_logreg_data$w2,
                                                             w = grouplasso2pop_logreg_data$w,
                                                             AA1 = grouplasso2pop_logreg_data$AA1,
                                                             AA2 = grouplasso2pop_logreg_data$AA2,
                                                             Com = grouplasso2pop_logreg_data$Com,
                                                             tol = 1e-3,
                                                             max.iter = 500,
                                                             report.prog = TRUE)

grouplasso2pop_logreg_cv_adapt_fixedgrid.out <- grouplasso2pop_logreg_cv_adapt_fixedgrid(Y1 = grouplasso2pop_logreg_data$Y1,
                                                                                         X1 = grouplasso2pop_logreg_data$X1,
                                                                                         groups1 = grouplasso2pop_logreg_data$groups1,
                                                                                         Y2 = grouplasso2pop_logreg_data$Y2,
                                                                                         X2 = grouplasso2pop_logreg_data$X2,
                                                                                         groups2 = grouplasso2pop_logreg_data$groups2,
                                                                                         lambda.seq = grouplasso2pop_logreg_grid.out$lambda.seq,
                                                                                         eta.seq = grouplasso2pop_logreg_grid.out$eta.seq,
                                                                                         n.folds = 6,
                                                                                         lambda.initial.fit = grouplasso2pop_logreg_grid.out$lambda.seq[1],
                                                                                         w1 = grouplasso2pop_logreg_data$w1,
                                                                                         w2 = grouplasso2pop_logreg_data$w2,
                                                                                         w = grouplasso2pop_logreg_data$w,
                                                                                         AA1 = grouplasso2pop_logreg_data$AA1,
                                                                                         AA2 = grouplasso2pop_logreg_data$AA2,
                                                                                         Com = grouplasso2pop_logreg_data$Com)
}
