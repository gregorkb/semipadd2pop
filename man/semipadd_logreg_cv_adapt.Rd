% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd_logreg.R
\name{semipadd_logreg_cv_adapt}
\alias{semipadd_logreg_cv_adapt}
\title{Compute semiparametric binary-response regression model with 2 data sets while penalizing dissimilarity using CV to select tuning parameters after an adaptive step}
\usage{
semipadd_logreg_cv_adapt(
  Y,
  X,
  nonparm,
  w,
  d,
  xi,
  n.lambda = 5,
  lambda.min.ratio = 0.01,
  n.folds = 5,
  lambda.beta = 1,
  lambda.f = 1,
  tol = 0.001,
  max.iter = 1000,
  report.prog = FALSE
)
}
\arguments{
\item{Y}{the binary response vector}

\item{X}{the matrix with the observed covariate values (including a column of ones for the intercept)}

\item{nonparm}{a vector indicating for which covariates a nonparametric function is to be estimated}

\item{w}{covariate-specific weights for different penalization toward similarity for different covariates}

\item{d}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{xi}{a tuning parameter governing the smoothness of the nonparametric estimates}

\item{n.lambda}{the number of lambda values with which to make the grid}

\item{lambda.min.ratio}{ratio of the smallest lambda value to the smallest value of lambda which admits no variables to the model}

\item{n.folds}{the number of crossvalidation folds}

\item{lambda.beta}{the level of sparsity penalization for the parametric effects (relative to nonparametric effects)}

\item{lambda.f}{the level of sparsity penalization for the nonparametric effects (relative to the parametric effects)}

\item{tol}{a convergence criterion}

\item{max.iter}{the maximum allowed number of iterations}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the estimator of the semiparametric additive model
}
\description{
Compute semiparametric binary-response regression model with 2 data sets while penalizing dissimilarity using CV to select tuning parameters after an adaptive step
}
\examples{
semipadd_logreg_data <- get_semipadd_logreg_data(n = 501)

semipadd_logreg_cv_adapt.out <- semipadd_logreg_cv_adapt(Y = semipadd_logreg_data$Y,
                                                         X = semipadd_logreg_data$X,
                                                         nonparm = semipadd_logreg_data$nonparm,
                                                         d = semipadd_logreg_data$nonparm*15,
                                                         xi = .5,
                                                         w = 1,
                                                         lambda.beta = 1,
                                                         lambda.f = 1,
                                                         n.lambda = 10,
                                                         lambda.min.ratio = .001,
                                                         tol = 1e-3,
                                                         max.iter = 500,
                                                         report.prog = TRUE)

plot_semipaddgt_cv(semipadd_logreg_cv_adapt.out,
                   true.functions = list(f = semipadd_logreg_data$f,
                                         X = semipadd_logreg_data$X)
                   
)
}
