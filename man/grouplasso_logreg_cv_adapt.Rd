% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouplasso.R
\name{grouplasso_logreg_cv_adapt}
\alias{grouplasso_logreg_cv_adapt}
\title{Choose tuning parameters by crossvalidation for grouplasso logreg with adaptive weights}
\usage{
grouplasso_logreg_cv_adapt(
  Y,
  X,
  groups,
  n.lambda,
  lambda.min.ratio,
  lambda.max.ratio,
  n.folds,
  w,
  tol = 0.001,
  maxiter = 500,
  report.prog = TRUE
)
}
\arguments{
\item{Y}{the binary response vector}

\item{X}{matrix containing the design matrices}

\item{groups}{a vector indicating to which group each covariate belongs}

\item{n.lambda}{the number of lambda values desired}

\item{lambda.min.ratio}{ratio of the smallest lambda value to the smallest value of lambda which admits no variables to the model}

\item{lambda.max.ratio}{ratio of the largest lambda value to the smallest value of lambda which admits no variables to the model}

\item{n.folds}{the number of crossvalidation folds}

\item{w}{group-specific weights for different penalization toward similarity for different groups}

\item{tol}{a convergence criterion}

\item{maxiter}{the maximum allowed number of iterations}

\item{report.prog}{a logical indicating whether the progress of the algorithm should be printed to the console}
}
\value{
a list containing the fits over a grid of lambda values as well as the vector of lambda values
}
\description{
Choose tuning parameters by crossvalidation for grouplasso logreg with adaptive weights
}
\examples{
grouplasso_logreg_data <- get_grouplasso_data(n = 500,response = "binary")

grouplasso_logreg_cv_adapt.out <- grouplasso_logreg_cv_adapt(Y = grouplasso_logreg_data$Y,
                                                             X = grouplasso_logreg_data$X,
                                                             groups = grouplasso_logreg_data$groups,
                                                             n.lambda = 25,
                                                             lambda.min.ratio = 0.01,
                                                             lambda.max.ratio = 0.50,
                                                             n.folds = 5,
                                                             w = grouplasso_logreg_data$w,
                                                             tol = 1e-3,
                                                             maxiter = 500,
                                                             report.prog = FALSE)
}
