% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semipadd_gt.R
\name{semipadd_gt_cv_adapt}
\alias{semipadd_gt_cv_adapt}
\title{Compute semiparametric binary-response regression model with group testing responses using CV to select the tuning parameter after an adaptive step}
\usage{
semipadd_gt_cv_adapt(
  Y,
  Z,
  Se,
  Sp,
  X,
  nonparm,
  w,
  d,
  xi,
  n.lambda = 5,
  lambda.min.ratio = 0.01,
  n.folds = 5,
  lambda.beta = 1,
  lambda.f = 1,
  tol = 0.001,
  max.iter = 1000,
  report.prog = FALSE
)
}
\arguments{
\item{Y}{Group testing output in the format as output by one of the functions \code{individual.assay.gen}, \code{dorfman.assay.gen}, or \code{array.assay.gen}.}

\item{Z}{Group testing output in the format as output by one of the functions \code{individual.assay.gen}, \code{dorfman.assay.gen}, or \code{array.assay.gen}.}

\item{Se}{A vector of testing sensitivities, where the first element is the
testing specificity for pools and the second entry is the
test specificity for individual testing, if applicable.}

\item{Sp}{A vector of testing specificities, where the first element is the
testing specificity for pools and the second entry is the
test specificity for individual testing, if applicable.}

\item{X}{the matrix with the observed covariate values (including a column of ones for the intercept)}

\item{nonparm}{a vector indicating for which covariates a nonparametric function is to be estimated}

\item{w}{covariate-specific weights for different penalization toward similarity for different covariates}

\item{d}{vector giving the dimensions the  B-spline bases to be used when fitting the nonparametric effects. If a scalar is given, this dimension is used for all nonparametric effects.}

\item{xi}{a tuning parameter governing the smoothness of the nonparametric estimates}

\item{n.lambda}{the number of lambda values with which to make the grid}

\item{lambda.min.ratio}{ratio of the smallest lambda value to the smallest value of lambda which admits no variables to the model}

\item{n.folds}{the number of crossvalidation folds}

\item{lambda.beta}{the level of sparsity penalization for the parametric effects (relative to nonparametric effects)}

\item{lambda.f}{the level of sparsity penalization for the nonparametric effects (relative to the parametric effects)}

\item{tol}{a convergence criterion}

\item{max.iter}{the maximum allowed number of iterations}

\item{return_obj}{a logical indicating whether the value of the objection function should be recorded after every step of the algorithm}
}
\value{
Returns the estimator of the semiparametric additive model
}
\description{
Compute semiparametric binary-response regression model with group testing responses using CV to select the tuning parameter after an adaptive step
}
\examples{
semipadd_gt_data <- get_semipadd_gt_data(n = 500)

semipadd_gt_cv.out <- semipadd_gt_cv(Y = semipadd_gt_data$Y,
                                     Z = semipadd_gt_data$Z,
                                     Se = semipadd_gt_data$Se,
                                     Sp = semipadd_gt_data$Sp,
                                     X = semipadd_gt_data$X,
                                     nonparm = semipadd_gt_data$nonparm,
                                     w = 1,
                                     d = semipadd_gt_data$nonparm*25,
                                     xi = 1,
                                     n.lambda = 20,
                                     lambda.min.ratio = .001,
                                     n.folds = 5,
                                     lambda.beta = 1,
                                     lambda.f = 1,
                                     tol = 1e-3,
                                     max.iter = 500,
                                     report.prog = FALSE)


plot_semipaddgt_cv(semipadd_gt_cv.out,
                   true.functions = list(f = semipadd_gt_data$f,
                                         X = semipadd_gt_data$X)
                   
)
}
